(()=>{"use strict";var e,r={294:(e,r,o)=>{var n=o(379),t=o.n(n),s=o(854);t()(s.Z,{insert:"head",singleton:!1}),s.Z.locals;const a=o(755);a("body").append("<footer></footer>"),a("footer").append("<p>Copyright - Holberton School</p>")},854:(e,r,o)=>{o.d(r,{Z:()=>l});var n=o(15),t=o.n(n),s=o(645),a=o.n(s)()(t());a.push([e.id,"footer {\n  align-items: center;\n}\n","",{version:3,sources:["webpack://./modules/footer/footer.css"],names:[],mappings:"AAAA;EACE,mBAAmB;AACrB",sourcesContent:["footer {\n  align-items: center;\n}\n"],sourceRoot:""}]);const l=a}},o={};function n(e){var t=o[e];if(void 0!==t)return t.exports;var s=o[e]={id:e,exports:{}};return r[e].call(s.exports,s,s.exports,n),s.exports}n.m=r,e=[],n.O=(r,o,t,s)=>{if(!o){var a=1/0;for(p=0;p<e.length;p++){for(var[o,t,s]=e[p],l=!0,i=0;i<o.length;i++)(!1&s||a>=s)&&Object.keys(n.O).every((e=>n.O[e](o[i])))?o.splice(i--,1):(l=!1,s<a&&(a=s));l&&(e.splice(p--,1),r=t())}return r}s=s||0;for(var p=e.length;p>0&&e[p-1][2]>s;p--)e[p]=e[p-1];e[p]=[o,t,s]},n.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return n.d(r,{a:r}),r},n.d=(e,r)=>{for(var o in r)n.o(r,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:r[o]})},n.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e={348:0};n.O.j=r=>0===e[r];var r=(r,o)=>{var t,s,[a,l,i]=o,p=0;for(t in l)n.o(l,t)&&(n.m[t]=l[t]);if(i)var c=i(n);for(r&&r(o);p<a.length;p++)s=a[p],n.o(e,s)&&e[s]&&e[s][0](),e[a[p]]=0;return n.O(c)},o=self.webpackChunktask_3=self.webpackChunktask_3||[];o.forEach(r.bind(null,0)),o.push=r.bind(null,o.push.bind(o))})();var t=n.O(void 0,[919],(()=>n(294)));t=n.O(t)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,